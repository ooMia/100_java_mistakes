---
import GlobalStyles from "@/components/GlobalStyles.astro";
import Layout from "@/layouts/Landing.astro";
import { Code } from "astro:components";

const path = "api/hello";
let data = { message: "No data available" };
let message = "Error Loading Data";
try {
  const response = await fetch(`http://localhost:8080/${path}`);
  if (!response.ok) {
    throw new Error(`HTTP Status: ${response.status}`);
  }
  data = await response.json();
  message = data.message || "Data Loaded Successfully";
} catch (error) {
  if (error instanceof Error) {
    data = { message: error.message };
    message = error.message;
  }
}
---

<style>
  .container {
    max-width: 800px;

    background: linear-gradient(145deg, #1a1e2e, #4facfe);
    animation: fadeIn 1s ease-out forwards;
  }

  h1 {
    font-size: 3rem;
    background: linear-gradient(90deg, #4facfe 0%, #00f2fe 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .info-box {
    max-width: 600px;
    border-left: 6px solid #4facfe;
    background: rgba(20, 30, 60, 0.5);
    backdrop-filter: blur(10px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);

    opacity: 0;
    animation: fadeIn 1s forwards;
    animation-delay: 0.3s;
    animation-fill-mode: both;
  }

  .info-box h2 {
    color: #4facfe;
    font-weight: 700;
  }

  .info-box p {
    color: #fff;
    line-height: 1.7;
  }

  .response-data {
    background: rgba(20, 30, 60, 0.3);
    opacity: 0;
    animation: fadeIn 1s forwards;
    animation-delay: 0.6s;
    animation-fill-mode: both;

    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .response-data h3 {
    padding: 0 0 0 0.5rem;
    margin: 0;
    font-size: 1.5rem;
    color: #4facfe;
  }

  .response-data div {
    margin: 0;
    color: #4facfe;
    font-family: "Fira Code", monospace;
    background: rgba(0, 0, 0, 0.2);
    display: inline-block;
  }
</style>

<GlobalStyles />
<Layout>
  <main class='container'>
    <div class='header'>
      <h1>{message}</h1>
    </div>

    <div class='info-box'>
      <h2>ðŸš€ SSG built from GitHub Actions Runner</h2>
      <p>
        This data is statically fetched on a build time from a SpringBoot server
        running on the GitHub Actions Runner.
      </p>
    </div>

    <div class='response-data'>
      <h3>API Response</h3>
      <div>GET /{path}</div>
      <Code
        code={JSON.stringify(data, null, 2)}
        lang='json'
        theme='dark-plus'
        style='padding: 1.5rem; margin: 0;'
        wrap
        tabindex={null}
      />
      <!-- tabindex disabled
      - Invalid `tabindex` on non-interactive element
      - pre elements should not have tabindex attribute
      -->
    </div>
  </main>
</Layout>
