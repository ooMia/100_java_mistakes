---
import { endpoints } from "../modules/getEndpoints";

// 숫자로 끝나는 주제별 첫 페이지만 필터링 & 중복 제거
const uniqueSubjects = new Set();
const filteredEndpoints = endpoints.filter((endpoint) => {
  // 숫자가 아닌 ID는 항상 포함 (예: 't3')
  if (isNaN(Number(endpoint.id))) {
    return true;
  }

  // 숫자인 경우 각 주제의 첫 번째 페이지만 포함
  if (!uniqueSubjects.has(endpoint.subject) && endpoint.id === "1") {
    uniqueSubjects.add(endpoint.subject);
    return true;
  }

  return false;
});
---

<div id='main-nav' class='container'>
  <ul>
    <li><a href='/'>홈</a></li>
    {
      filteredEndpoints.map((endpoint) => (
        <li>
          <a href={`/${endpoint.subject}/${endpoint.id}`}>
            {endpoint.subject} {!isNaN(Number(endpoint.id)) ? "" : endpoint.id}
          </a>
        </li>
      ))
    }
  </ul>
</div>

<style>
  .container {
    display: flex;
    background-color: #fff;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition:
      transform 0.3s ease-in-out,
      opacity 0.2s ease-in-out;
    transform-origin: top;

    max-width: 1200px;
    padding: 0.25rem 1rem;
  }

  ul {
    display: flex;
    gap: 1.5rem;
    list-style: none;
  }

  ul li {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  a {
    text-decoration: none;
    color: #333;
    font-weight: 500;
    text-transform: capitalize;
    padding: 0.5rem 0;
    position: relative;
  }

  a:hover::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #333;
    transform: scaleX(1);
    transition: transform 0.3s ease;
  }

  a::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #333;
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .nav-hidden {
    transform: scaleY(0);
    transform-origin: top;
    opacity: 0;
    transition:
      transform 0.3s ease,
      opacity 0.2s ease;
  }
</style>

<script>
  // 스크롤 이벤트 처리를 위한 스크립트
  let lastScrollY = window.scrollY;
  const nav = document.getElementById("main-nav");

  window.addEventListener("scroll", () => {
    const currentScrollY = window.scrollY;

    // 스크롤 방향 감지
    if (currentScrollY > lastScrollY) {
      // 아래로 스크롤: 네비게이션 숨기기
      nav!.classList.add("nav-hidden");
    } else {
      // 위로 스크롤: 네비게이션 표시
      nav!.classList.remove("nav-hidden");
    }

    lastScrollY = currentScrollY;
  });
</script>
